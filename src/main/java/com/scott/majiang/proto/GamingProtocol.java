// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/controller/majaing.proto

package com.scott.majiang.proto;

public final class GamingProtocol {
  private GamingProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum MessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    HEART_BEAT_C2S(0, 10000),
    JOIN_TABLE_C2S(1, 10001),
    JOIN_TABLE_S2C(2, 10002),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static MessageType valueOf(int value) {
      switch (value) {
        case 10000: return HEART_BEAT_C2S;
        case 10001: return JOIN_TABLE_C2S;
        case 10002: return JOIN_TABLE_S2C;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
            public MessageType findValueByNumber(int number) {
              return MessageType.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.scott.majiang.proto.GamingProtocol.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final MessageType[] VALUES = {
      HEART_BEAT_C2S, JOIN_TABLE_C2S, JOIN_TABLE_S2C, 
    };
    public static MessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private MessageType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.scott.majiang.proto.GamingProtocol.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:tutorial.MessageType)
  }
  
  public enum GameState
      implements com.google.protobuf.ProtocolMessageEnum {
    state_new(0, 0),
    state_gaming(1, 1),
    state_end(2, 2),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static GameState valueOf(int value) {
      switch (value) {
        case 0: return state_new;
        case 1: return state_gaming;
        case 2: return state_end;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<GameState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GameState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GameState>() {
            public GameState findValueByNumber(int number) {
              return GameState.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.scott.majiang.proto.GamingProtocol.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final GameState[] VALUES = {
      state_new, state_gaming, state_end, 
    };
    public static GameState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private GameState(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.scott.majiang.proto.GamingProtocol.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:tutorial.GameState)
  }
  
  public static final class Majiang extends
      com.google.protobuf.GeneratedMessage {
    // Use Majiang.newBuilder() to construct.
    private Majiang() {
      initFields();
    }
    private Majiang(boolean noInit) {}
    
    private static final Majiang defaultInstance;
    public static Majiang getDefaultInstance() {
      return defaultInstance;
    }
    
    public Majiang getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.scott.majiang.proto.GamingProtocol.internal_static_tutorial_Majiang_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.scott.majiang.proto.GamingProtocol.internal_static_tutorial_Majiang_fieldAccessorTable;
    }
    
    // optional .tutorial.MessageType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private boolean hasType;
    private com.scott.majiang.proto.GamingProtocol.MessageType type_;
    public boolean hasType() { return hasType; }
    public com.scott.majiang.proto.GamingProtocol.MessageType getType() { return type_; }
    
    // optional int64 playerId = 2;
    public static final int PLAYERID_FIELD_NUMBER = 2;
    private boolean hasPlayerId;
    private long playerId_ = 0L;
    public boolean hasPlayerId() { return hasPlayerId; }
    public long getPlayerId() { return playerId_; }
    
    // optional .tutorial.MajiangMathData mathData = 3;
    public static final int MATHDATA_FIELD_NUMBER = 3;
    private boolean hasMathData;
    private com.scott.majiang.proto.GamingProtocol.MajiangMathData mathData_;
    public boolean hasMathData() { return hasMathData; }
    public com.scott.majiang.proto.GamingProtocol.MajiangMathData getMathData() { return mathData_; }
    
    // optional .tutorial.JoinTableC2S joinTableC2S = 4;
    public static final int JOINTABLEC2S_FIELD_NUMBER = 4;
    private boolean hasJoinTableC2S;
    private com.scott.majiang.proto.GamingProtocol.JoinTableC2S joinTableC2S_;
    public boolean hasJoinTableC2S() { return hasJoinTableC2S; }
    public com.scott.majiang.proto.GamingProtocol.JoinTableC2S getJoinTableC2S() { return joinTableC2S_; }
    
    // optional .tutorial.JoinTableS2C joinTableS2C = 5;
    public static final int JOINTABLES2C_FIELD_NUMBER = 5;
    private boolean hasJoinTableS2C;
    private com.scott.majiang.proto.GamingProtocol.JoinTableS2C joinTableS2C_;
    public boolean hasJoinTableS2C() { return hasJoinTableS2C; }
    public com.scott.majiang.proto.GamingProtocol.JoinTableS2C getJoinTableS2C() { return joinTableS2C_; }
    
    private void initFields() {
      type_ = com.scott.majiang.proto.GamingProtocol.MessageType.HEART_BEAT_C2S;
      mathData_ = com.scott.majiang.proto.GamingProtocol.MajiangMathData.getDefaultInstance();
      joinTableC2S_ = com.scott.majiang.proto.GamingProtocol.JoinTableC2S.getDefaultInstance();
      joinTableS2C_ = com.scott.majiang.proto.GamingProtocol.JoinTableS2C.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasType()) {
        output.writeEnum(1, getType().getNumber());
      }
      if (hasPlayerId()) {
        output.writeInt64(2, getPlayerId());
      }
      if (hasMathData()) {
        output.writeMessage(3, getMathData());
      }
      if (hasJoinTableC2S()) {
        output.writeMessage(4, getJoinTableC2S());
      }
      if (hasJoinTableS2C()) {
        output.writeMessage(5, getJoinTableS2C());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getType().getNumber());
      }
      if (hasPlayerId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getPlayerId());
      }
      if (hasMathData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMathData());
      }
      if (hasJoinTableC2S()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getJoinTableC2S());
      }
      if (hasJoinTableS2C()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getJoinTableS2C());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.scott.majiang.proto.GamingProtocol.Majiang parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.Majiang parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.Majiang parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.Majiang parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.Majiang parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.Majiang parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.Majiang parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.scott.majiang.proto.GamingProtocol.Majiang parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.scott.majiang.proto.GamingProtocol.Majiang parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.Majiang parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.scott.majiang.proto.GamingProtocol.Majiang prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.scott.majiang.proto.GamingProtocol.Majiang result;
      
      // Construct using com.scott.majiang.proto.GamingProtocol.Majiang.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.scott.majiang.proto.GamingProtocol.Majiang();
        return builder;
      }
      
      protected com.scott.majiang.proto.GamingProtocol.Majiang internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.scott.majiang.proto.GamingProtocol.Majiang();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.scott.majiang.proto.GamingProtocol.Majiang.getDescriptor();
      }
      
      public com.scott.majiang.proto.GamingProtocol.Majiang getDefaultInstanceForType() {
        return com.scott.majiang.proto.GamingProtocol.Majiang.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.scott.majiang.proto.GamingProtocol.Majiang build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.scott.majiang.proto.GamingProtocol.Majiang buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.scott.majiang.proto.GamingProtocol.Majiang buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.scott.majiang.proto.GamingProtocol.Majiang returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.scott.majiang.proto.GamingProtocol.Majiang) {
          return mergeFrom((com.scott.majiang.proto.GamingProtocol.Majiang)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.scott.majiang.proto.GamingProtocol.Majiang other) {
        if (other == com.scott.majiang.proto.GamingProtocol.Majiang.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasMathData()) {
          mergeMathData(other.getMathData());
        }
        if (other.hasJoinTableC2S()) {
          mergeJoinTableC2S(other.getJoinTableC2S());
        }
        if (other.hasJoinTableS2C()) {
          mergeJoinTableS2C(other.getJoinTableS2C());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.scott.majiang.proto.GamingProtocol.MessageType value = com.scott.majiang.proto.GamingProtocol.MessageType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setType(value);
              }
              break;
            }
            case 16: {
              setPlayerId(input.readInt64());
              break;
            }
            case 26: {
              com.scott.majiang.proto.GamingProtocol.MajiangMathData.Builder subBuilder = com.scott.majiang.proto.GamingProtocol.MajiangMathData.newBuilder();
              if (hasMathData()) {
                subBuilder.mergeFrom(getMathData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMathData(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.scott.majiang.proto.GamingProtocol.JoinTableC2S.Builder subBuilder = com.scott.majiang.proto.GamingProtocol.JoinTableC2S.newBuilder();
              if (hasJoinTableC2S()) {
                subBuilder.mergeFrom(getJoinTableC2S());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setJoinTableC2S(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.scott.majiang.proto.GamingProtocol.JoinTableS2C.Builder subBuilder = com.scott.majiang.proto.GamingProtocol.JoinTableS2C.newBuilder();
              if (hasJoinTableS2C()) {
                subBuilder.mergeFrom(getJoinTableS2C());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setJoinTableS2C(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .tutorial.MessageType type = 1;
      public boolean hasType() {
        return result.hasType();
      }
      public com.scott.majiang.proto.GamingProtocol.MessageType getType() {
        return result.getType();
      }
      public Builder setType(com.scott.majiang.proto.GamingProtocol.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = com.scott.majiang.proto.GamingProtocol.MessageType.HEART_BEAT_C2S;
        return this;
      }
      
      // optional int64 playerId = 2;
      public boolean hasPlayerId() {
        return result.hasPlayerId();
      }
      public long getPlayerId() {
        return result.getPlayerId();
      }
      public Builder setPlayerId(long value) {
        result.hasPlayerId = true;
        result.playerId_ = value;
        return this;
      }
      public Builder clearPlayerId() {
        result.hasPlayerId = false;
        result.playerId_ = 0L;
        return this;
      }
      
      // optional .tutorial.MajiangMathData mathData = 3;
      public boolean hasMathData() {
        return result.hasMathData();
      }
      public com.scott.majiang.proto.GamingProtocol.MajiangMathData getMathData() {
        return result.getMathData();
      }
      public Builder setMathData(com.scott.majiang.proto.GamingProtocol.MajiangMathData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMathData = true;
        result.mathData_ = value;
        return this;
      }
      public Builder setMathData(com.scott.majiang.proto.GamingProtocol.MajiangMathData.Builder builderForValue) {
        result.hasMathData = true;
        result.mathData_ = builderForValue.build();
        return this;
      }
      public Builder mergeMathData(com.scott.majiang.proto.GamingProtocol.MajiangMathData value) {
        if (result.hasMathData() &&
            result.mathData_ != com.scott.majiang.proto.GamingProtocol.MajiangMathData.getDefaultInstance()) {
          result.mathData_ =
            com.scott.majiang.proto.GamingProtocol.MajiangMathData.newBuilder(result.mathData_).mergeFrom(value).buildPartial();
        } else {
          result.mathData_ = value;
        }
        result.hasMathData = true;
        return this;
      }
      public Builder clearMathData() {
        result.hasMathData = false;
        result.mathData_ = com.scott.majiang.proto.GamingProtocol.MajiangMathData.getDefaultInstance();
        return this;
      }
      
      // optional .tutorial.JoinTableC2S joinTableC2S = 4;
      public boolean hasJoinTableC2S() {
        return result.hasJoinTableC2S();
      }
      public com.scott.majiang.proto.GamingProtocol.JoinTableC2S getJoinTableC2S() {
        return result.getJoinTableC2S();
      }
      public Builder setJoinTableC2S(com.scott.majiang.proto.GamingProtocol.JoinTableC2S value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasJoinTableC2S = true;
        result.joinTableC2S_ = value;
        return this;
      }
      public Builder setJoinTableC2S(com.scott.majiang.proto.GamingProtocol.JoinTableC2S.Builder builderForValue) {
        result.hasJoinTableC2S = true;
        result.joinTableC2S_ = builderForValue.build();
        return this;
      }
      public Builder mergeJoinTableC2S(com.scott.majiang.proto.GamingProtocol.JoinTableC2S value) {
        if (result.hasJoinTableC2S() &&
            result.joinTableC2S_ != com.scott.majiang.proto.GamingProtocol.JoinTableC2S.getDefaultInstance()) {
          result.joinTableC2S_ =
            com.scott.majiang.proto.GamingProtocol.JoinTableC2S.newBuilder(result.joinTableC2S_).mergeFrom(value).buildPartial();
        } else {
          result.joinTableC2S_ = value;
        }
        result.hasJoinTableC2S = true;
        return this;
      }
      public Builder clearJoinTableC2S() {
        result.hasJoinTableC2S = false;
        result.joinTableC2S_ = com.scott.majiang.proto.GamingProtocol.JoinTableC2S.getDefaultInstance();
        return this;
      }
      
      // optional .tutorial.JoinTableS2C joinTableS2C = 5;
      public boolean hasJoinTableS2C() {
        return result.hasJoinTableS2C();
      }
      public com.scott.majiang.proto.GamingProtocol.JoinTableS2C getJoinTableS2C() {
        return result.getJoinTableS2C();
      }
      public Builder setJoinTableS2C(com.scott.majiang.proto.GamingProtocol.JoinTableS2C value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasJoinTableS2C = true;
        result.joinTableS2C_ = value;
        return this;
      }
      public Builder setJoinTableS2C(com.scott.majiang.proto.GamingProtocol.JoinTableS2C.Builder builderForValue) {
        result.hasJoinTableS2C = true;
        result.joinTableS2C_ = builderForValue.build();
        return this;
      }
      public Builder mergeJoinTableS2C(com.scott.majiang.proto.GamingProtocol.JoinTableS2C value) {
        if (result.hasJoinTableS2C() &&
            result.joinTableS2C_ != com.scott.majiang.proto.GamingProtocol.JoinTableS2C.getDefaultInstance()) {
          result.joinTableS2C_ =
            com.scott.majiang.proto.GamingProtocol.JoinTableS2C.newBuilder(result.joinTableS2C_).mergeFrom(value).buildPartial();
        } else {
          result.joinTableS2C_ = value;
        }
        result.hasJoinTableS2C = true;
        return this;
      }
      public Builder clearJoinTableS2C() {
        result.hasJoinTableS2C = false;
        result.joinTableS2C_ = com.scott.majiang.proto.GamingProtocol.JoinTableS2C.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:tutorial.Majiang)
    }
    
    static {
      defaultInstance = new Majiang(true);
      com.scott.majiang.proto.GamingProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:tutorial.Majiang)
  }
  
  public static final class MajiangMathData extends
      com.google.protobuf.GeneratedMessage {
    // Use MajiangMathData.newBuilder() to construct.
    private MajiangMathData() {
      initFields();
    }
    private MajiangMathData(boolean noInit) {}
    
    private static final MajiangMathData defaultInstance;
    public static MajiangMathData getDefaultInstance() {
      return defaultInstance;
    }
    
    public MajiangMathData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.scott.majiang.proto.GamingProtocol.internal_static_tutorial_MajiangMathData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.scott.majiang.proto.GamingProtocol.internal_static_tutorial_MajiangMathData_fieldAccessorTable;
    }
    
    // optional int32 gameId = 1;
    public static final int GAMEID_FIELD_NUMBER = 1;
    private boolean hasGameId;
    private int gameId_ = 0;
    public boolean hasGameId() { return hasGameId; }
    public int getGameId() { return gameId_; }
    
    // optional int64 totalWin = 2;
    public static final int TOTALWIN_FIELD_NUMBER = 2;
    private boolean hasTotalWin;
    private long totalWin_ = 0L;
    public boolean hasTotalWin() { return hasTotalWin; }
    public long getTotalWin() { return totalWin_; }
    
    // optional .tutorial.GameState state = 3;
    public static final int STATE_FIELD_NUMBER = 3;
    private boolean hasState;
    private com.scott.majiang.proto.GamingProtocol.GameState state_;
    public boolean hasState() { return hasState; }
    public com.scott.majiang.proto.GamingProtocol.GameState getState() { return state_; }
    
    private void initFields() {
      state_ = com.scott.majiang.proto.GamingProtocol.GameState.state_new;
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasGameId()) {
        output.writeInt32(1, getGameId());
      }
      if (hasTotalWin()) {
        output.writeInt64(2, getTotalWin());
      }
      if (hasState()) {
        output.writeEnum(3, getState().getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getGameId());
      }
      if (hasTotalWin()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getTotalWin());
      }
      if (hasState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, getState().getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.scott.majiang.proto.GamingProtocol.MajiangMathData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.MajiangMathData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.MajiangMathData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.MajiangMathData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.MajiangMathData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.MajiangMathData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.MajiangMathData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.scott.majiang.proto.GamingProtocol.MajiangMathData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.scott.majiang.proto.GamingProtocol.MajiangMathData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.MajiangMathData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.scott.majiang.proto.GamingProtocol.MajiangMathData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.scott.majiang.proto.GamingProtocol.MajiangMathData result;
      
      // Construct using com.scott.majiang.proto.GamingProtocol.MajiangMathData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.scott.majiang.proto.GamingProtocol.MajiangMathData();
        return builder;
      }
      
      protected com.scott.majiang.proto.GamingProtocol.MajiangMathData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.scott.majiang.proto.GamingProtocol.MajiangMathData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.scott.majiang.proto.GamingProtocol.MajiangMathData.getDescriptor();
      }
      
      public com.scott.majiang.proto.GamingProtocol.MajiangMathData getDefaultInstanceForType() {
        return com.scott.majiang.proto.GamingProtocol.MajiangMathData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.scott.majiang.proto.GamingProtocol.MajiangMathData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.scott.majiang.proto.GamingProtocol.MajiangMathData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.scott.majiang.proto.GamingProtocol.MajiangMathData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.scott.majiang.proto.GamingProtocol.MajiangMathData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.scott.majiang.proto.GamingProtocol.MajiangMathData) {
          return mergeFrom((com.scott.majiang.proto.GamingProtocol.MajiangMathData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.scott.majiang.proto.GamingProtocol.MajiangMathData other) {
        if (other == com.scott.majiang.proto.GamingProtocol.MajiangMathData.getDefaultInstance()) return this;
        if (other.hasGameId()) {
          setGameId(other.getGameId());
        }
        if (other.hasTotalWin()) {
          setTotalWin(other.getTotalWin());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setGameId(input.readInt32());
              break;
            }
            case 16: {
              setTotalWin(input.readInt64());
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.scott.majiang.proto.GamingProtocol.GameState value = com.scott.majiang.proto.GamingProtocol.GameState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                setState(value);
              }
              break;
            }
          }
        }
      }
      
      
      // optional int32 gameId = 1;
      public boolean hasGameId() {
        return result.hasGameId();
      }
      public int getGameId() {
        return result.getGameId();
      }
      public Builder setGameId(int value) {
        result.hasGameId = true;
        result.gameId_ = value;
        return this;
      }
      public Builder clearGameId() {
        result.hasGameId = false;
        result.gameId_ = 0;
        return this;
      }
      
      // optional int64 totalWin = 2;
      public boolean hasTotalWin() {
        return result.hasTotalWin();
      }
      public long getTotalWin() {
        return result.getTotalWin();
      }
      public Builder setTotalWin(long value) {
        result.hasTotalWin = true;
        result.totalWin_ = value;
        return this;
      }
      public Builder clearTotalWin() {
        result.hasTotalWin = false;
        result.totalWin_ = 0L;
        return this;
      }
      
      // optional .tutorial.GameState state = 3;
      public boolean hasState() {
        return result.hasState();
      }
      public com.scott.majiang.proto.GamingProtocol.GameState getState() {
        return result.getState();
      }
      public Builder setState(com.scott.majiang.proto.GamingProtocol.GameState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder clearState() {
        result.hasState = false;
        result.state_ = com.scott.majiang.proto.GamingProtocol.GameState.state_new;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:tutorial.MajiangMathData)
    }
    
    static {
      defaultInstance = new MajiangMathData(true);
      com.scott.majiang.proto.GamingProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:tutorial.MajiangMathData)
  }
  
  public static final class JoinTableS2C extends
      com.google.protobuf.GeneratedMessage {
    // Use JoinTableS2C.newBuilder() to construct.
    private JoinTableS2C() {
      initFields();
    }
    private JoinTableS2C(boolean noInit) {}
    
    private static final JoinTableS2C defaultInstance;
    public static JoinTableS2C getDefaultInstance() {
      return defaultInstance;
    }
    
    public JoinTableS2C getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.scott.majiang.proto.GamingProtocol.internal_static_tutorial_JoinTableS2C_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.scott.majiang.proto.GamingProtocol.internal_static_tutorial_JoinTableS2C_fieldAccessorTable;
    }
    
    // optional int32 retCode = 1;
    public static final int RETCODE_FIELD_NUMBER = 1;
    private boolean hasRetCode;
    private int retCode_ = 0;
    public boolean hasRetCode() { return hasRetCode; }
    public int getRetCode() { return retCode_; }
    
    // optional .tutorial.TableInfo tableInfo = 2;
    public static final int TABLEINFO_FIELD_NUMBER = 2;
    private boolean hasTableInfo;
    private com.scott.majiang.proto.GamingProtocol.TableInfo tableInfo_;
    public boolean hasTableInfo() { return hasTableInfo; }
    public com.scott.majiang.proto.GamingProtocol.TableInfo getTableInfo() { return tableInfo_; }
    
    private void initFields() {
      tableInfo_ = com.scott.majiang.proto.GamingProtocol.TableInfo.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRetCode()) {
        output.writeInt32(1, getRetCode());
      }
      if (hasTableInfo()) {
        output.writeMessage(2, getTableInfo());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRetCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getRetCode());
      }
      if (hasTableInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTableInfo());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.scott.majiang.proto.GamingProtocol.JoinTableS2C parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableS2C parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableS2C parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableS2C parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableS2C parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableS2C parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableS2C parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableS2C parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableS2C parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableS2C parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.scott.majiang.proto.GamingProtocol.JoinTableS2C prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.scott.majiang.proto.GamingProtocol.JoinTableS2C result;
      
      // Construct using com.scott.majiang.proto.GamingProtocol.JoinTableS2C.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.scott.majiang.proto.GamingProtocol.JoinTableS2C();
        return builder;
      }
      
      protected com.scott.majiang.proto.GamingProtocol.JoinTableS2C internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.scott.majiang.proto.GamingProtocol.JoinTableS2C();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.scott.majiang.proto.GamingProtocol.JoinTableS2C.getDescriptor();
      }
      
      public com.scott.majiang.proto.GamingProtocol.JoinTableS2C getDefaultInstanceForType() {
        return com.scott.majiang.proto.GamingProtocol.JoinTableS2C.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.scott.majiang.proto.GamingProtocol.JoinTableS2C build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.scott.majiang.proto.GamingProtocol.JoinTableS2C buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.scott.majiang.proto.GamingProtocol.JoinTableS2C buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.scott.majiang.proto.GamingProtocol.JoinTableS2C returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.scott.majiang.proto.GamingProtocol.JoinTableS2C) {
          return mergeFrom((com.scott.majiang.proto.GamingProtocol.JoinTableS2C)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.scott.majiang.proto.GamingProtocol.JoinTableS2C other) {
        if (other == com.scott.majiang.proto.GamingProtocol.JoinTableS2C.getDefaultInstance()) return this;
        if (other.hasRetCode()) {
          setRetCode(other.getRetCode());
        }
        if (other.hasTableInfo()) {
          mergeTableInfo(other.getTableInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setRetCode(input.readInt32());
              break;
            }
            case 18: {
              com.scott.majiang.proto.GamingProtocol.TableInfo.Builder subBuilder = com.scott.majiang.proto.GamingProtocol.TableInfo.newBuilder();
              if (hasTableInfo()) {
                subBuilder.mergeFrom(getTableInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTableInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional int32 retCode = 1;
      public boolean hasRetCode() {
        return result.hasRetCode();
      }
      public int getRetCode() {
        return result.getRetCode();
      }
      public Builder setRetCode(int value) {
        result.hasRetCode = true;
        result.retCode_ = value;
        return this;
      }
      public Builder clearRetCode() {
        result.hasRetCode = false;
        result.retCode_ = 0;
        return this;
      }
      
      // optional .tutorial.TableInfo tableInfo = 2;
      public boolean hasTableInfo() {
        return result.hasTableInfo();
      }
      public com.scott.majiang.proto.GamingProtocol.TableInfo getTableInfo() {
        return result.getTableInfo();
      }
      public Builder setTableInfo(com.scott.majiang.proto.GamingProtocol.TableInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTableInfo = true;
        result.tableInfo_ = value;
        return this;
      }
      public Builder setTableInfo(com.scott.majiang.proto.GamingProtocol.TableInfo.Builder builderForValue) {
        result.hasTableInfo = true;
        result.tableInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeTableInfo(com.scott.majiang.proto.GamingProtocol.TableInfo value) {
        if (result.hasTableInfo() &&
            result.tableInfo_ != com.scott.majiang.proto.GamingProtocol.TableInfo.getDefaultInstance()) {
          result.tableInfo_ =
            com.scott.majiang.proto.GamingProtocol.TableInfo.newBuilder(result.tableInfo_).mergeFrom(value).buildPartial();
        } else {
          result.tableInfo_ = value;
        }
        result.hasTableInfo = true;
        return this;
      }
      public Builder clearTableInfo() {
        result.hasTableInfo = false;
        result.tableInfo_ = com.scott.majiang.proto.GamingProtocol.TableInfo.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:tutorial.JoinTableS2C)
    }
    
    static {
      defaultInstance = new JoinTableS2C(true);
      com.scott.majiang.proto.GamingProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:tutorial.JoinTableS2C)
  }
  
  public static final class JoinTableC2S extends
      com.google.protobuf.GeneratedMessage {
    // Use JoinTableC2S.newBuilder() to construct.
    private JoinTableC2S() {
      initFields();
    }
    private JoinTableC2S(boolean noInit) {}
    
    private static final JoinTableC2S defaultInstance;
    public static JoinTableC2S getDefaultInstance() {
      return defaultInstance;
    }
    
    public JoinTableC2S getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.scott.majiang.proto.GamingProtocol.internal_static_tutorial_JoinTableC2S_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.scott.majiang.proto.GamingProtocol.internal_static_tutorial_JoinTableC2S_fieldAccessorTable;
    }
    
    // optional .tutorial.TablePlayerInfo tablePlayerInfo = 1;
    public static final int TABLEPLAYERINFO_FIELD_NUMBER = 1;
    private boolean hasTablePlayerInfo;
    private com.scott.majiang.proto.GamingProtocol.TablePlayerInfo tablePlayerInfo_;
    public boolean hasTablePlayerInfo() { return hasTablePlayerInfo; }
    public com.scott.majiang.proto.GamingProtocol.TablePlayerInfo getTablePlayerInfo() { return tablePlayerInfo_; }
    
    private void initFields() {
      tablePlayerInfo_ = com.scott.majiang.proto.GamingProtocol.TablePlayerInfo.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTablePlayerInfo()) {
        output.writeMessage(1, getTablePlayerInfo());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTablePlayerInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTablePlayerInfo());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.scott.majiang.proto.GamingProtocol.JoinTableC2S parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableC2S parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableC2S parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableC2S parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableC2S parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableC2S parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableC2S parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableC2S parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableC2S parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.JoinTableC2S parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.scott.majiang.proto.GamingProtocol.JoinTableC2S prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.scott.majiang.proto.GamingProtocol.JoinTableC2S result;
      
      // Construct using com.scott.majiang.proto.GamingProtocol.JoinTableC2S.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.scott.majiang.proto.GamingProtocol.JoinTableC2S();
        return builder;
      }
      
      protected com.scott.majiang.proto.GamingProtocol.JoinTableC2S internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.scott.majiang.proto.GamingProtocol.JoinTableC2S();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.scott.majiang.proto.GamingProtocol.JoinTableC2S.getDescriptor();
      }
      
      public com.scott.majiang.proto.GamingProtocol.JoinTableC2S getDefaultInstanceForType() {
        return com.scott.majiang.proto.GamingProtocol.JoinTableC2S.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.scott.majiang.proto.GamingProtocol.JoinTableC2S build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.scott.majiang.proto.GamingProtocol.JoinTableC2S buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.scott.majiang.proto.GamingProtocol.JoinTableC2S buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.scott.majiang.proto.GamingProtocol.JoinTableC2S returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.scott.majiang.proto.GamingProtocol.JoinTableC2S) {
          return mergeFrom((com.scott.majiang.proto.GamingProtocol.JoinTableC2S)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.scott.majiang.proto.GamingProtocol.JoinTableC2S other) {
        if (other == com.scott.majiang.proto.GamingProtocol.JoinTableC2S.getDefaultInstance()) return this;
        if (other.hasTablePlayerInfo()) {
          mergeTablePlayerInfo(other.getTablePlayerInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.scott.majiang.proto.GamingProtocol.TablePlayerInfo.Builder subBuilder = com.scott.majiang.proto.GamingProtocol.TablePlayerInfo.newBuilder();
              if (hasTablePlayerInfo()) {
                subBuilder.mergeFrom(getTablePlayerInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTablePlayerInfo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .tutorial.TablePlayerInfo tablePlayerInfo = 1;
      public boolean hasTablePlayerInfo() {
        return result.hasTablePlayerInfo();
      }
      public com.scott.majiang.proto.GamingProtocol.TablePlayerInfo getTablePlayerInfo() {
        return result.getTablePlayerInfo();
      }
      public Builder setTablePlayerInfo(com.scott.majiang.proto.GamingProtocol.TablePlayerInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTablePlayerInfo = true;
        result.tablePlayerInfo_ = value;
        return this;
      }
      public Builder setTablePlayerInfo(com.scott.majiang.proto.GamingProtocol.TablePlayerInfo.Builder builderForValue) {
        result.hasTablePlayerInfo = true;
        result.tablePlayerInfo_ = builderForValue.build();
        return this;
      }
      public Builder mergeTablePlayerInfo(com.scott.majiang.proto.GamingProtocol.TablePlayerInfo value) {
        if (result.hasTablePlayerInfo() &&
            result.tablePlayerInfo_ != com.scott.majiang.proto.GamingProtocol.TablePlayerInfo.getDefaultInstance()) {
          result.tablePlayerInfo_ =
            com.scott.majiang.proto.GamingProtocol.TablePlayerInfo.newBuilder(result.tablePlayerInfo_).mergeFrom(value).buildPartial();
        } else {
          result.tablePlayerInfo_ = value;
        }
        result.hasTablePlayerInfo = true;
        return this;
      }
      public Builder clearTablePlayerInfo() {
        result.hasTablePlayerInfo = false;
        result.tablePlayerInfo_ = com.scott.majiang.proto.GamingProtocol.TablePlayerInfo.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:tutorial.JoinTableC2S)
    }
    
    static {
      defaultInstance = new JoinTableC2S(true);
      com.scott.majiang.proto.GamingProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:tutorial.JoinTableC2S)
  }
  
  public static final class TableInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use TableInfo.newBuilder() to construct.
    private TableInfo() {
      initFields();
    }
    private TableInfo(boolean noInit) {}
    
    private static final TableInfo defaultInstance;
    public static TableInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public TableInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.scott.majiang.proto.GamingProtocol.internal_static_tutorial_TableInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.scott.majiang.proto.GamingProtocol.internal_static_tutorial_TableInfo_fieldAccessorTable;
    }
    
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional int32 speedType = 3;
    public static final int SPEEDTYPE_FIELD_NUMBER = 3;
    private boolean hasSpeedType;
    private int speedType_ = 0;
    public boolean hasSpeedType() { return hasSpeedType; }
    public int getSpeedType() { return speedType_; }
    
    // optional int64 blinds = 4;
    public static final int BLINDS_FIELD_NUMBER = 4;
    private boolean hasBlinds;
    private long blinds_ = 0L;
    public boolean hasBlinds() { return hasBlinds; }
    public long getBlinds() { return blinds_; }
    
    // optional int32 userCount = 6;
    public static final int USERCOUNT_FIELD_NUMBER = 6;
    private boolean hasUserCount;
    private int userCount_ = 0;
    public boolean hasUserCount() { return hasUserCount; }
    public int getUserCount() { return userCount_; }
    
    // optional int32 maxUserCount = 7;
    public static final int MAXUSERCOUNT_FIELD_NUMBER = 7;
    private boolean hasMaxUserCount;
    private int maxUserCount_ = 0;
    public boolean hasMaxUserCount() { return hasMaxUserCount; }
    public int getMaxUserCount() { return maxUserCount_; }
    
    // repeated .tutorial.TablePlayerInfo playerList = 8;
    public static final int PLAYERLIST_FIELD_NUMBER = 8;
    private java.util.List<com.scott.majiang.proto.GamingProtocol.TablePlayerInfo> playerList_ =
      java.util.Collections.emptyList();
    public java.util.List<com.scott.majiang.proto.GamingProtocol.TablePlayerInfo> getPlayerListList() {
      return playerList_;
    }
    public int getPlayerListCount() { return playerList_.size(); }
    public com.scott.majiang.proto.GamingProtocol.TablePlayerInfo getPlayerList(int index) {
      return playerList_.get(index);
    }
    
    // optional int32 speed = 9;
    public static final int SPEED_FIELD_NUMBER = 9;
    private boolean hasSpeed;
    private int speed_ = 0;
    public boolean hasSpeed() { return hasSpeed; }
    public int getSpeed() { return speed_; }
    
    // optional int32 gameInterval = 10;
    public static final int GAMEINTERVAL_FIELD_NUMBER = 10;
    private boolean hasGameInterval;
    private int gameInterval_ = 0;
    public boolean hasGameInterval() { return hasGameInterval; }
    public int getGameInterval() { return gameInterval_; }
    
    // optional int64 minBuyIn = 11;
    public static final int MINBUYIN_FIELD_NUMBER = 11;
    private boolean hasMinBuyIn;
    private long minBuyIn_ = 0L;
    public boolean hasMinBuyIn() { return hasMinBuyIn; }
    public long getMinBuyIn() { return minBuyIn_; }
    
    // optional int64 maxBuyIn = 12;
    public static final int MAXBUYIN_FIELD_NUMBER = 12;
    private boolean hasMaxBuyIn;
    private long maxBuyIn_ = 0L;
    public boolean hasMaxBuyIn() { return hasMaxBuyIn; }
    public long getMaxBuyIn() { return maxBuyIn_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeInt32(1, getId());
      }
      if (hasName()) {
        output.writeString(2, getName());
      }
      if (hasSpeedType()) {
        output.writeInt32(3, getSpeedType());
      }
      if (hasBlinds()) {
        output.writeInt64(4, getBlinds());
      }
      if (hasUserCount()) {
        output.writeInt32(6, getUserCount());
      }
      if (hasMaxUserCount()) {
        output.writeInt32(7, getMaxUserCount());
      }
      for (com.scott.majiang.proto.GamingProtocol.TablePlayerInfo element : getPlayerListList()) {
        output.writeMessage(8, element);
      }
      if (hasSpeed()) {
        output.writeInt32(9, getSpeed());
      }
      if (hasGameInterval()) {
        output.writeInt32(10, getGameInterval());
      }
      if (hasMinBuyIn()) {
        output.writeInt64(11, getMinBuyIn());
      }
      if (hasMaxBuyIn()) {
        output.writeInt64(12, getMaxBuyIn());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getId());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      if (hasSpeedType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getSpeedType());
      }
      if (hasBlinds()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, getBlinds());
      }
      if (hasUserCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getUserCount());
      }
      if (hasMaxUserCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getMaxUserCount());
      }
      for (com.scott.majiang.proto.GamingProtocol.TablePlayerInfo element : getPlayerListList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, element);
      }
      if (hasSpeed()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, getSpeed());
      }
      if (hasGameInterval()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, getGameInterval());
      }
      if (hasMinBuyIn()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, getMinBuyIn());
      }
      if (hasMaxBuyIn()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, getMaxBuyIn());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.scott.majiang.proto.GamingProtocol.TableInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.TableInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.TableInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.TableInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.TableInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.TableInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.TableInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.scott.majiang.proto.GamingProtocol.TableInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.scott.majiang.proto.GamingProtocol.TableInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.TableInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.scott.majiang.proto.GamingProtocol.TableInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.scott.majiang.proto.GamingProtocol.TableInfo result;
      
      // Construct using com.scott.majiang.proto.GamingProtocol.TableInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.scott.majiang.proto.GamingProtocol.TableInfo();
        return builder;
      }
      
      protected com.scott.majiang.proto.GamingProtocol.TableInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.scott.majiang.proto.GamingProtocol.TableInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.scott.majiang.proto.GamingProtocol.TableInfo.getDescriptor();
      }
      
      public com.scott.majiang.proto.GamingProtocol.TableInfo getDefaultInstanceForType() {
        return com.scott.majiang.proto.GamingProtocol.TableInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.scott.majiang.proto.GamingProtocol.TableInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.scott.majiang.proto.GamingProtocol.TableInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.scott.majiang.proto.GamingProtocol.TableInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.playerList_ != java.util.Collections.EMPTY_LIST) {
          result.playerList_ =
            java.util.Collections.unmodifiableList(result.playerList_);
        }
        com.scott.majiang.proto.GamingProtocol.TableInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.scott.majiang.proto.GamingProtocol.TableInfo) {
          return mergeFrom((com.scott.majiang.proto.GamingProtocol.TableInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.scott.majiang.proto.GamingProtocol.TableInfo other) {
        if (other == com.scott.majiang.proto.GamingProtocol.TableInfo.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasSpeedType()) {
          setSpeedType(other.getSpeedType());
        }
        if (other.hasBlinds()) {
          setBlinds(other.getBlinds());
        }
        if (other.hasUserCount()) {
          setUserCount(other.getUserCount());
        }
        if (other.hasMaxUserCount()) {
          setMaxUserCount(other.getMaxUserCount());
        }
        if (!other.playerList_.isEmpty()) {
          if (result.playerList_.isEmpty()) {
            result.playerList_ = new java.util.ArrayList<com.scott.majiang.proto.GamingProtocol.TablePlayerInfo>();
          }
          result.playerList_.addAll(other.playerList_);
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasGameInterval()) {
          setGameInterval(other.getGameInterval());
        }
        if (other.hasMinBuyIn()) {
          setMinBuyIn(other.getMinBuyIn());
        }
        if (other.hasMaxBuyIn()) {
          setMaxBuyIn(other.getMaxBuyIn());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readInt32());
              break;
            }
            case 18: {
              setName(input.readString());
              break;
            }
            case 24: {
              setSpeedType(input.readInt32());
              break;
            }
            case 32: {
              setBlinds(input.readInt64());
              break;
            }
            case 48: {
              setUserCount(input.readInt32());
              break;
            }
            case 56: {
              setMaxUserCount(input.readInt32());
              break;
            }
            case 66: {
              com.scott.majiang.proto.GamingProtocol.TablePlayerInfo.Builder subBuilder = com.scott.majiang.proto.GamingProtocol.TablePlayerInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPlayerList(subBuilder.buildPartial());
              break;
            }
            case 72: {
              setSpeed(input.readInt32());
              break;
            }
            case 80: {
              setGameInterval(input.readInt32());
              break;
            }
            case 88: {
              setMinBuyIn(input.readInt64());
              break;
            }
            case 96: {
              setMaxBuyIn(input.readInt64());
              break;
            }
          }
        }
      }
      
      
      // optional int32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // optional string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional int32 speedType = 3;
      public boolean hasSpeedType() {
        return result.hasSpeedType();
      }
      public int getSpeedType() {
        return result.getSpeedType();
      }
      public Builder setSpeedType(int value) {
        result.hasSpeedType = true;
        result.speedType_ = value;
        return this;
      }
      public Builder clearSpeedType() {
        result.hasSpeedType = false;
        result.speedType_ = 0;
        return this;
      }
      
      // optional int64 blinds = 4;
      public boolean hasBlinds() {
        return result.hasBlinds();
      }
      public long getBlinds() {
        return result.getBlinds();
      }
      public Builder setBlinds(long value) {
        result.hasBlinds = true;
        result.blinds_ = value;
        return this;
      }
      public Builder clearBlinds() {
        result.hasBlinds = false;
        result.blinds_ = 0L;
        return this;
      }
      
      // optional int32 userCount = 6;
      public boolean hasUserCount() {
        return result.hasUserCount();
      }
      public int getUserCount() {
        return result.getUserCount();
      }
      public Builder setUserCount(int value) {
        result.hasUserCount = true;
        result.userCount_ = value;
        return this;
      }
      public Builder clearUserCount() {
        result.hasUserCount = false;
        result.userCount_ = 0;
        return this;
      }
      
      // optional int32 maxUserCount = 7;
      public boolean hasMaxUserCount() {
        return result.hasMaxUserCount();
      }
      public int getMaxUserCount() {
        return result.getMaxUserCount();
      }
      public Builder setMaxUserCount(int value) {
        result.hasMaxUserCount = true;
        result.maxUserCount_ = value;
        return this;
      }
      public Builder clearMaxUserCount() {
        result.hasMaxUserCount = false;
        result.maxUserCount_ = 0;
        return this;
      }
      
      // repeated .tutorial.TablePlayerInfo playerList = 8;
      public java.util.List<com.scott.majiang.proto.GamingProtocol.TablePlayerInfo> getPlayerListList() {
        return java.util.Collections.unmodifiableList(result.playerList_);
      }
      public int getPlayerListCount() {
        return result.getPlayerListCount();
      }
      public com.scott.majiang.proto.GamingProtocol.TablePlayerInfo getPlayerList(int index) {
        return result.getPlayerList(index);
      }
      public Builder setPlayerList(int index, com.scott.majiang.proto.GamingProtocol.TablePlayerInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.playerList_.set(index, value);
        return this;
      }
      public Builder setPlayerList(int index, com.scott.majiang.proto.GamingProtocol.TablePlayerInfo.Builder builderForValue) {
        result.playerList_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPlayerList(com.scott.majiang.proto.GamingProtocol.TablePlayerInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.playerList_.isEmpty()) {
          result.playerList_ = new java.util.ArrayList<com.scott.majiang.proto.GamingProtocol.TablePlayerInfo>();
        }
        result.playerList_.add(value);
        return this;
      }
      public Builder addPlayerList(com.scott.majiang.proto.GamingProtocol.TablePlayerInfo.Builder builderForValue) {
        if (result.playerList_.isEmpty()) {
          result.playerList_ = new java.util.ArrayList<com.scott.majiang.proto.GamingProtocol.TablePlayerInfo>();
        }
        result.playerList_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPlayerList(
          java.lang.Iterable<? extends com.scott.majiang.proto.GamingProtocol.TablePlayerInfo> values) {
        if (result.playerList_.isEmpty()) {
          result.playerList_ = new java.util.ArrayList<com.scott.majiang.proto.GamingProtocol.TablePlayerInfo>();
        }
        super.addAll(values, result.playerList_);
        return this;
      }
      public Builder clearPlayerList() {
        result.playerList_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 speed = 9;
      public boolean hasSpeed() {
        return result.hasSpeed();
      }
      public int getSpeed() {
        return result.getSpeed();
      }
      public Builder setSpeed(int value) {
        result.hasSpeed = true;
        result.speed_ = value;
        return this;
      }
      public Builder clearSpeed() {
        result.hasSpeed = false;
        result.speed_ = 0;
        return this;
      }
      
      // optional int32 gameInterval = 10;
      public boolean hasGameInterval() {
        return result.hasGameInterval();
      }
      public int getGameInterval() {
        return result.getGameInterval();
      }
      public Builder setGameInterval(int value) {
        result.hasGameInterval = true;
        result.gameInterval_ = value;
        return this;
      }
      public Builder clearGameInterval() {
        result.hasGameInterval = false;
        result.gameInterval_ = 0;
        return this;
      }
      
      // optional int64 minBuyIn = 11;
      public boolean hasMinBuyIn() {
        return result.hasMinBuyIn();
      }
      public long getMinBuyIn() {
        return result.getMinBuyIn();
      }
      public Builder setMinBuyIn(long value) {
        result.hasMinBuyIn = true;
        result.minBuyIn_ = value;
        return this;
      }
      public Builder clearMinBuyIn() {
        result.hasMinBuyIn = false;
        result.minBuyIn_ = 0L;
        return this;
      }
      
      // optional int64 maxBuyIn = 12;
      public boolean hasMaxBuyIn() {
        return result.hasMaxBuyIn();
      }
      public long getMaxBuyIn() {
        return result.getMaxBuyIn();
      }
      public Builder setMaxBuyIn(long value) {
        result.hasMaxBuyIn = true;
        result.maxBuyIn_ = value;
        return this;
      }
      public Builder clearMaxBuyIn() {
        result.hasMaxBuyIn = false;
        result.maxBuyIn_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:tutorial.TableInfo)
    }
    
    static {
      defaultInstance = new TableInfo(true);
      com.scott.majiang.proto.GamingProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:tutorial.TableInfo)
  }
  
  public static final class TablePlayerInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use TablePlayerInfo.newBuilder() to construct.
    private TablePlayerInfo() {
      initFields();
    }
    private TablePlayerInfo(boolean noInit) {}
    
    private static final TablePlayerInfo defaultInstance;
    public static TablePlayerInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public TablePlayerInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.scott.majiang.proto.GamingProtocol.internal_static_tutorial_TablePlayerInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.scott.majiang.proto.GamingProtocol.internal_static_tutorial_TablePlayerInfo_fieldAccessorTable;
    }
    
    // optional int64 playerId = 1;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private boolean hasPlayerId;
    private long playerId_ = 0L;
    public boolean hasPlayerId() { return hasPlayerId; }
    public long getPlayerId() { return playerId_; }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional int64 amounts = 3;
    public static final int AMOUNTS_FIELD_NUMBER = 3;
    private boolean hasAmounts;
    private long amounts_ = 0L;
    public boolean hasAmounts() { return hasAmounts; }
    public long getAmounts() { return amounts_; }
    
    // optional int32 tableId = 4;
    public static final int TABLEID_FIELD_NUMBER = 4;
    private boolean hasTableId;
    private int tableId_ = 0;
    public boolean hasTableId() { return hasTableId; }
    public int getTableId() { return tableId_; }
    
    // optional int32 location = 5;
    public static final int LOCATION_FIELD_NUMBER = 5;
    private boolean hasLocation;
    private int location_ = 0;
    public boolean hasLocation() { return hasLocation; }
    public int getLocation() { return location_; }
    
    // optional int64 moneyOnTable = 6;
    public static final int MONEYONTABLE_FIELD_NUMBER = 6;
    private boolean hasMoneyOnTable;
    private long moneyOnTable_ = 0L;
    public boolean hasMoneyOnTable() { return hasMoneyOnTable; }
    public long getMoneyOnTable() { return moneyOnTable_; }
    
    // optional int32 pictureId = 7;
    public static final int PICTUREID_FIELD_NUMBER = 7;
    private boolean hasPictureId;
    private int pictureId_ = 0;
    public boolean hasPictureId() { return hasPictureId; }
    public int getPictureId() { return pictureId_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPlayerId()) {
        output.writeInt64(1, getPlayerId());
      }
      if (hasName()) {
        output.writeString(2, getName());
      }
      if (hasAmounts()) {
        output.writeInt64(3, getAmounts());
      }
      if (hasTableId()) {
        output.writeInt32(4, getTableId());
      }
      if (hasLocation()) {
        output.writeInt32(5, getLocation());
      }
      if (hasMoneyOnTable()) {
        output.writeInt64(6, getMoneyOnTable());
      }
      if (hasPictureId()) {
        output.writeInt32(7, getPictureId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPlayerId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getPlayerId());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      if (hasAmounts()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, getAmounts());
      }
      if (hasTableId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getTableId());
      }
      if (hasLocation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getLocation());
      }
      if (hasMoneyOnTable()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, getMoneyOnTable());
      }
      if (hasPictureId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getPictureId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.scott.majiang.proto.GamingProtocol.TablePlayerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.TablePlayerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.TablePlayerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.TablePlayerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.TablePlayerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.TablePlayerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.TablePlayerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.scott.majiang.proto.GamingProtocol.TablePlayerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.scott.majiang.proto.GamingProtocol.TablePlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.TablePlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.scott.majiang.proto.GamingProtocol.TablePlayerInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.scott.majiang.proto.GamingProtocol.TablePlayerInfo result;
      
      // Construct using com.scott.majiang.proto.GamingProtocol.TablePlayerInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.scott.majiang.proto.GamingProtocol.TablePlayerInfo();
        return builder;
      }
      
      protected com.scott.majiang.proto.GamingProtocol.TablePlayerInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.scott.majiang.proto.GamingProtocol.TablePlayerInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.scott.majiang.proto.GamingProtocol.TablePlayerInfo.getDescriptor();
      }
      
      public com.scott.majiang.proto.GamingProtocol.TablePlayerInfo getDefaultInstanceForType() {
        return com.scott.majiang.proto.GamingProtocol.TablePlayerInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.scott.majiang.proto.GamingProtocol.TablePlayerInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.scott.majiang.proto.GamingProtocol.TablePlayerInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.scott.majiang.proto.GamingProtocol.TablePlayerInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.scott.majiang.proto.GamingProtocol.TablePlayerInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.scott.majiang.proto.GamingProtocol.TablePlayerInfo) {
          return mergeFrom((com.scott.majiang.proto.GamingProtocol.TablePlayerInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.scott.majiang.proto.GamingProtocol.TablePlayerInfo other) {
        if (other == com.scott.majiang.proto.GamingProtocol.TablePlayerInfo.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasAmounts()) {
          setAmounts(other.getAmounts());
        }
        if (other.hasTableId()) {
          setTableId(other.getTableId());
        }
        if (other.hasLocation()) {
          setLocation(other.getLocation());
        }
        if (other.hasMoneyOnTable()) {
          setMoneyOnTable(other.getMoneyOnTable());
        }
        if (other.hasPictureId()) {
          setPictureId(other.getPictureId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setPlayerId(input.readInt64());
              break;
            }
            case 18: {
              setName(input.readString());
              break;
            }
            case 24: {
              setAmounts(input.readInt64());
              break;
            }
            case 32: {
              setTableId(input.readInt32());
              break;
            }
            case 40: {
              setLocation(input.readInt32());
              break;
            }
            case 48: {
              setMoneyOnTable(input.readInt64());
              break;
            }
            case 56: {
              setPictureId(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int64 playerId = 1;
      public boolean hasPlayerId() {
        return result.hasPlayerId();
      }
      public long getPlayerId() {
        return result.getPlayerId();
      }
      public Builder setPlayerId(long value) {
        result.hasPlayerId = true;
        result.playerId_ = value;
        return this;
      }
      public Builder clearPlayerId() {
        result.hasPlayerId = false;
        result.playerId_ = 0L;
        return this;
      }
      
      // optional string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional int64 amounts = 3;
      public boolean hasAmounts() {
        return result.hasAmounts();
      }
      public long getAmounts() {
        return result.getAmounts();
      }
      public Builder setAmounts(long value) {
        result.hasAmounts = true;
        result.amounts_ = value;
        return this;
      }
      public Builder clearAmounts() {
        result.hasAmounts = false;
        result.amounts_ = 0L;
        return this;
      }
      
      // optional int32 tableId = 4;
      public boolean hasTableId() {
        return result.hasTableId();
      }
      public int getTableId() {
        return result.getTableId();
      }
      public Builder setTableId(int value) {
        result.hasTableId = true;
        result.tableId_ = value;
        return this;
      }
      public Builder clearTableId() {
        result.hasTableId = false;
        result.tableId_ = 0;
        return this;
      }
      
      // optional int32 location = 5;
      public boolean hasLocation() {
        return result.hasLocation();
      }
      public int getLocation() {
        return result.getLocation();
      }
      public Builder setLocation(int value) {
        result.hasLocation = true;
        result.location_ = value;
        return this;
      }
      public Builder clearLocation() {
        result.hasLocation = false;
        result.location_ = 0;
        return this;
      }
      
      // optional int64 moneyOnTable = 6;
      public boolean hasMoneyOnTable() {
        return result.hasMoneyOnTable();
      }
      public long getMoneyOnTable() {
        return result.getMoneyOnTable();
      }
      public Builder setMoneyOnTable(long value) {
        result.hasMoneyOnTable = true;
        result.moneyOnTable_ = value;
        return this;
      }
      public Builder clearMoneyOnTable() {
        result.hasMoneyOnTable = false;
        result.moneyOnTable_ = 0L;
        return this;
      }
      
      // optional int32 pictureId = 7;
      public boolean hasPictureId() {
        return result.hasPictureId();
      }
      public int getPictureId() {
        return result.getPictureId();
      }
      public Builder setPictureId(int value) {
        result.hasPictureId = true;
        result.pictureId_ = value;
        return this;
      }
      public Builder clearPictureId() {
        result.hasPictureId = false;
        result.pictureId_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:tutorial.TablePlayerInfo)
    }
    
    static {
      defaultInstance = new TablePlayerInfo(true);
      com.scott.majiang.proto.GamingProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:tutorial.TablePlayerInfo)
  }
  
  public static final class Player extends
      com.google.protobuf.GeneratedMessage {
    // Use Player.newBuilder() to construct.
    private Player() {
      initFields();
    }
    private Player(boolean noInit) {}
    
    private static final Player defaultInstance;
    public static Player getDefaultInstance() {
      return defaultInstance;
    }
    
    public Player getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.scott.majiang.proto.GamingProtocol.internal_static_tutorial_Player_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.scott.majiang.proto.GamingProtocol.internal_static_tutorial_Player_fieldAccessorTable;
    }
    
    public enum Sex
        implements com.google.protobuf.ProtocolMessageEnum {
      unknow(0, 0),
      male(1, 1),
      female(2, 2),
      hermaphrodite(3, 3),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Sex valueOf(int value) {
        switch (value) {
          case 0: return unknow;
          case 1: return male;
          case 2: return female;
          case 3: return hermaphrodite;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Sex>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Sex>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Sex>() {
              public Sex findValueByNumber(int number) {
                return Sex.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.scott.majiang.proto.GamingProtocol.Player.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Sex[] VALUES = {
        unknow, male, female, hermaphrodite, 
      };
      public static Sex valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Sex(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        com.scott.majiang.proto.GamingProtocol.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:tutorial.Player.Sex)
    }
    
    // optional int64 PlayerId = 1;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private boolean hasPlayerId;
    private long playerId_ = 0L;
    public boolean hasPlayerId() { return hasPlayerId; }
    public long getPlayerId() { return playerId_; }
    
    // optional .tutorial.Player.Sex sex = 2 [default = unknow];
    public static final int SEX_FIELD_NUMBER = 2;
    private boolean hasSex;
    private com.scott.majiang.proto.GamingProtocol.Player.Sex sex_;
    public boolean hasSex() { return hasSex; }
    public com.scott.majiang.proto.GamingProtocol.Player.Sex getSex() { return sex_; }
    
    // optional uint64 money = 3 [default = 0];
    public static final int MONEY_FIELD_NUMBER = 3;
    private boolean hasMoney;
    private long money_ = 0L;
    public boolean hasMoney() { return hasMoney; }
    public long getMoney() { return money_; }
    
    private void initFields() {
      sex_ = com.scott.majiang.proto.GamingProtocol.Player.Sex.unknow;
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPlayerId()) {
        output.writeInt64(1, getPlayerId());
      }
      if (hasSex()) {
        output.writeEnum(2, getSex().getNumber());
      }
      if (hasMoney()) {
        output.writeUInt64(3, getMoney());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPlayerId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getPlayerId());
      }
      if (hasSex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, getSex().getNumber());
      }
      if (hasMoney()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, getMoney());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.scott.majiang.proto.GamingProtocol.Player parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.Player parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.Player parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.Player parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.Player parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.Player parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.Player parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.scott.majiang.proto.GamingProtocol.Player parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.scott.majiang.proto.GamingProtocol.Player parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.scott.majiang.proto.GamingProtocol.Player parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.scott.majiang.proto.GamingProtocol.Player prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.scott.majiang.proto.GamingProtocol.Player result;
      
      // Construct using com.scott.majiang.proto.GamingProtocol.Player.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.scott.majiang.proto.GamingProtocol.Player();
        return builder;
      }
      
      protected com.scott.majiang.proto.GamingProtocol.Player internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.scott.majiang.proto.GamingProtocol.Player();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.scott.majiang.proto.GamingProtocol.Player.getDescriptor();
      }
      
      public com.scott.majiang.proto.GamingProtocol.Player getDefaultInstanceForType() {
        return com.scott.majiang.proto.GamingProtocol.Player.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.scott.majiang.proto.GamingProtocol.Player build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.scott.majiang.proto.GamingProtocol.Player buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.scott.majiang.proto.GamingProtocol.Player buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.scott.majiang.proto.GamingProtocol.Player returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.scott.majiang.proto.GamingProtocol.Player) {
          return mergeFrom((com.scott.majiang.proto.GamingProtocol.Player)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.scott.majiang.proto.GamingProtocol.Player other) {
        if (other == com.scott.majiang.proto.GamingProtocol.Player.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setPlayerId(input.readInt64());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.scott.majiang.proto.GamingProtocol.Player.Sex value = com.scott.majiang.proto.GamingProtocol.Player.Sex.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                setSex(value);
              }
              break;
            }
            case 24: {
              setMoney(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // optional int64 PlayerId = 1;
      public boolean hasPlayerId() {
        return result.hasPlayerId();
      }
      public long getPlayerId() {
        return result.getPlayerId();
      }
      public Builder setPlayerId(long value) {
        result.hasPlayerId = true;
        result.playerId_ = value;
        return this;
      }
      public Builder clearPlayerId() {
        result.hasPlayerId = false;
        result.playerId_ = 0L;
        return this;
      }
      
      // optional .tutorial.Player.Sex sex = 2 [default = unknow];
      public boolean hasSex() {
        return result.hasSex();
      }
      public com.scott.majiang.proto.GamingProtocol.Player.Sex getSex() {
        return result.getSex();
      }
      public Builder setSex(com.scott.majiang.proto.GamingProtocol.Player.Sex value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSex = true;
        result.sex_ = value;
        return this;
      }
      public Builder clearSex() {
        result.hasSex = false;
        result.sex_ = com.scott.majiang.proto.GamingProtocol.Player.Sex.unknow;
        return this;
      }
      
      // optional uint64 money = 3 [default = 0];
      public boolean hasMoney() {
        return result.hasMoney();
      }
      public long getMoney() {
        return result.getMoney();
      }
      public Builder setMoney(long value) {
        result.hasMoney = true;
        result.money_ = value;
        return this;
      }
      public Builder clearMoney() {
        result.hasMoney = false;
        result.money_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:tutorial.Player)
    }
    
    static {
      defaultInstance = new Player(true);
      com.scott.majiang.proto.GamingProtocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:tutorial.Player)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Majiang_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tutorial_Majiang_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_MajiangMathData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tutorial_MajiangMathData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_JoinTableS2C_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tutorial_JoinTableS2C_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_JoinTableC2S_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tutorial_JoinTableC2S_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_TableInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tutorial_TableInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_TablePlayerInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tutorial_TablePlayerInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Player_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tutorial_Player_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034src/controller/majaing.proto\022\010tutorial" +
      "\"\311\001\n\007Majiang\022#\n\004type\030\001 \001(\0162\025.tutorial.Me" +
      "ssageType\022\020\n\010playerId\030\002 \001(\003\022+\n\010mathData\030" +
      "\003 \001(\0132\031.tutorial.MajiangMathData\022,\n\014join" +
      "TableC2S\030\004 \001(\0132\026.tutorial.JoinTableC2S\022," +
      "\n\014joinTableS2C\030\005 \001(\0132\026.tutorial.JoinTabl" +
      "eS2C\"W\n\017MajiangMathData\022\016\n\006gameId\030\001 \001(\005\022" +
      "\020\n\010totalWin\030\002 \001(\003\022\"\n\005state\030\003 \001(\0162\023.tutor" +
      "ial.GameState\"G\n\014JoinTableS2C\022\017\n\007retCode" +
      "\030\001 \001(\005\022&\n\ttableInfo\030\002 \001(\0132\023.tutorial.Tab",
      "leInfo\"B\n\014JoinTableC2S\0222\n\017tablePlayerInf" +
      "o\030\001 \001(\0132\031.tutorial.TablePlayerInfo\"\351\001\n\tT" +
      "ableInfo\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\021\n\tsp" +
      "eedType\030\003 \001(\005\022\016\n\006blinds\030\004 \001(\003\022\021\n\tuserCou" +
      "nt\030\006 \001(\005\022\024\n\014maxUserCount\030\007 \001(\005\022-\n\nplayer" +
      "List\030\010 \003(\0132\031.tutorial.TablePlayerInfo\022\r\n" +
      "\005speed\030\t \001(\005\022\024\n\014gameInterval\030\n \001(\005\022\020\n\010mi" +
      "nBuyIn\030\013 \001(\003\022\020\n\010maxBuyIn\030\014 \001(\003\"\216\001\n\017Table" +
      "PlayerInfo\022\020\n\010playerId\030\001 \001(\003\022\014\n\004name\030\002 \001" +
      "(\t\022\017\n\007amounts\030\003 \001(\003\022\017\n\007tableId\030\004 \001(\005\022\020\n\010",
      "location\030\005 \001(\005\022\024\n\014moneyOnTable\030\006 \001(\003\022\021\n\t" +
      "pictureId\030\007 \001(\005\"\223\001\n\006Player\022\020\n\010PlayerId\030\001" +
      " \001(\003\022)\n\003sex\030\002 \001(\0162\024.tutorial.Player.Sex:" +
      "\006unknow\022\020\n\005money\030\003 \001(\004:\0010\":\n\003Sex\022\n\n\006unkn" +
      "ow\020\000\022\010\n\004male\020\001\022\n\n\006female\020\002\022\021\n\rhermaphrod" +
      "ite\020\003*L\n\013MessageType\022\023\n\016HEART_BEAT_C2S\020\220" +
      "N\022\023\n\016JOIN_TABLE_C2S\020\221N\022\023\n\016JOIN_TABLE_S2C" +
      "\020\222N*;\n\tGameState\022\r\n\tstate_new\020\000\022\020\n\014state" +
      "_gaming\020\001\022\r\n\tstate_end\020\002B+\n\027com.scott.ma" +
      "jiang.protoB\016GamingProtocolH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_tutorial_Majiang_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_tutorial_Majiang_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_tutorial_Majiang_descriptor,
              new java.lang.String[] { "Type", "PlayerId", "MathData", "JoinTableC2S", "JoinTableS2C", },
              com.scott.majiang.proto.GamingProtocol.Majiang.class,
              com.scott.majiang.proto.GamingProtocol.Majiang.Builder.class);
          internal_static_tutorial_MajiangMathData_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_tutorial_MajiangMathData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_tutorial_MajiangMathData_descriptor,
              new java.lang.String[] { "GameId", "TotalWin", "State", },
              com.scott.majiang.proto.GamingProtocol.MajiangMathData.class,
              com.scott.majiang.proto.GamingProtocol.MajiangMathData.Builder.class);
          internal_static_tutorial_JoinTableS2C_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_tutorial_JoinTableS2C_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_tutorial_JoinTableS2C_descriptor,
              new java.lang.String[] { "RetCode", "TableInfo", },
              com.scott.majiang.proto.GamingProtocol.JoinTableS2C.class,
              com.scott.majiang.proto.GamingProtocol.JoinTableS2C.Builder.class);
          internal_static_tutorial_JoinTableC2S_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_tutorial_JoinTableC2S_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_tutorial_JoinTableC2S_descriptor,
              new java.lang.String[] { "TablePlayerInfo", },
              com.scott.majiang.proto.GamingProtocol.JoinTableC2S.class,
              com.scott.majiang.proto.GamingProtocol.JoinTableC2S.Builder.class);
          internal_static_tutorial_TableInfo_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_tutorial_TableInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_tutorial_TableInfo_descriptor,
              new java.lang.String[] { "Id", "Name", "SpeedType", "Blinds", "UserCount", "MaxUserCount", "PlayerList", "Speed", "GameInterval", "MinBuyIn", "MaxBuyIn", },
              com.scott.majiang.proto.GamingProtocol.TableInfo.class,
              com.scott.majiang.proto.GamingProtocol.TableInfo.Builder.class);
          internal_static_tutorial_TablePlayerInfo_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_tutorial_TablePlayerInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_tutorial_TablePlayerInfo_descriptor,
              new java.lang.String[] { "PlayerId", "Name", "Amounts", "TableId", "Location", "MoneyOnTable", "PictureId", },
              com.scott.majiang.proto.GamingProtocol.TablePlayerInfo.class,
              com.scott.majiang.proto.GamingProtocol.TablePlayerInfo.Builder.class);
          internal_static_tutorial_Player_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_tutorial_Player_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_tutorial_Player_descriptor,
              new java.lang.String[] { "PlayerId", "Sex", "Money", },
              com.scott.majiang.proto.GamingProtocol.Player.class,
              com.scott.majiang.proto.GamingProtocol.Player.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
